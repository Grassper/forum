type Mutation {
  # Add all the custom queries here
  incrementLikePostUserMetrics(id: ID!): UserMetrics
  decrementLikePostUserMetrics(id: ID!): UserMetrics
  incrementLovePostUserMetrics(id: ID!): UserMetrics
  decrementLovePostUserMetrics(id: ID!): UserMetrics
  incrementSupportPostUserMetrics(id: ID!): UserMetrics
  decrementSupportPostUserMetrics(id: ID!): UserMetrics
  incrementDislikePostUserMetrics(id: ID!): UserMetrics
  decrementDislikePostUserMetrics(id: ID!): UserMetrics
  incrementProfileViewUserMetrics(id: ID!): UserMetrics
  decrementProfileViewUserMetrics(id: ID!): UserMetrics
  incrementCommentUpvoteUserMetrics(id: ID!): UserMetrics
  decrementCommentUpvoteUserMetrics(id: ID!): UserMetrics
  incrementCommentDownvoteUserMetrics(id: ID!): UserMetrics
  decrementCommentDownvoteUserMetrics(id: ID!): UserMetrics
  incrementActiveDayUserMetrics(id: ID!): UserMetrics
  decrementActiveDayUserMetrics(id: ID!): UserMetrics
}

type FollowRelationship @model @auth(rules: [{ allow: public }]) {
  id: ID!
  followeeId: String!
  followerId: String!
  followee: User @connection
  follower: User @connection
}

type User @model @auth(rules: [{ allow: public }]) {
  id: ID!
  username: String!
  email: String!
  coins: Int!
}

type UserMetrics @model @auth(rules: [{ allow: public }]) {
  id: ID!
  postLikes: Int!
  postLoves: Int!
  postSupports: Int!
  postDislikes: Int!
  profileViews: Int!
  badges: [String]
  commentUpvotes: Int!
  commentDownvotes: Int!
  activeDays: Int!
  lastActiveDay: AWSDate!
  User: User @connection
}
